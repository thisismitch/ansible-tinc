---

- name: install tinc
  package: name=tinc state=latest

- name: create tinc unit file
  template: >
    src=templates/tinc.service.j2
    dest=/etc/systemd/system/tinc.service
    owner=root
    group=root
    mode=0644

  notify: ["reload systemctl"]
  when: ansible_service_mgr == "systemd"

- name: create tinc unit file (instance)
  template: >
    src=templates/tinc@.service.j2
    dest=/etc/systemd/system/tinc@.service
    owner=root
    group=root
    mode=0644

  notify: ["reload systemctl"]
  when: ansible_service_mgr == "systemd"

- name: run handlers
  meta: flush_handlers
- name: cache peer host files locally
  fetch: >
    src=/etc/tinc/{{ netname }}/hosts/{{ ansible_hostname }}
    dest=fetch/{{ ansible_hostname }}
    flat=yes
    fail_on_missing=yes

- name: distribute host config files
  synchronize: >
    src=fetch/
    dest=/etc/tinc/{{ netname }}/hosts/

  notify: ["reload tinc"]

- name: add entries to /etc/hosts for (server) peers
  lineinfile: >
    dest=/etc/hosts
    regexp='.*{{ item }}$'
    line="{{ hostvars[item].vpn_ip }} {{item}}"
    state=present

  with_items: "{{ play_hosts }}"
  when: hostvars[item].vpn_ip is defined
